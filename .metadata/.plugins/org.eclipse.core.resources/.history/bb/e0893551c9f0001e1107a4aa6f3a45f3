package employee;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;

public class EmployeeMain {
	public static void main(String[] args) {
//		1. 회사의 사원들의 정보를 HashMap에 저장한다
//		HashMap의 Key는 사원의 ID(String)
//		Value는 이름, 나이, 부서로 설정
		//HashMap value를 List 로 순서, 중복가능하게 ArrayList로 넣는다
		//짱구의 value 만들기 
		ArrayList value1 = new ArrayList();//업캐스팅으로 
		value1.add("짱구");
		value1.add(5);
		value1.add("영업부");
		System.out.println(value1);
		//철수의 value 만들기 
		ArrayList value2 = new ArrayList();//업캐스팅으로 
		value2.add("철수");
		value2.add(5);
		value2.add("개발부");
		System.out.println(value2);
		//유리의 value 만들기 
		ArrayList value3 = new ArrayList();//업캐스팅으로 
		value3.add("유리");
		value3.add(5);
		value3.add("사업부");
		System.out.println(value3);
		//HashMap으로 객체 생성
//		조건1. 새로운 사원정보를 추가
//		001, 짱구, 5, "영업부"
//		002, 철수, 5, "개발부"
//		003, 유리, 5, "사업부"
		HashMap<String, ArrayList> employee1 = new HashMap<>();
		employee1.put("001", value1);
		employee1.put("002", value2);
		employee1.put("003", value3);
		System.out.println(employee1);

//		조건2. 특정 ID의 사원 정보를 조회
		//key 값으로 조회 get 
		System.out.println(employee1.get("001"));
		System.out.println(employee1.get("002"));
		System.out.println(employee1.get("003"));
//		조건3. 모든 사원의 정보를 출력
//		entrySet 메소드사용
		//key value 한쌍 씩 가져오기 
			//내부 인터페이스 Entry 를 이용한다
			Set<Map.Entry<String,ArrayList>> items = employee1.entrySet();
			for(Map.Entry<String,ArrayList> entry: items) {
				System.out.println(entry);
			}
//		조건4. 특정 ID의 사원 정보를 삭제
//		조건5. 모든 사원 정보를 삭제
//		clear 메소드 사용
	}
}
